/* Generated By:JavaCC: Do not edit this line. AxionSqlParserConstants.java */
package org.axiondb.parser;

public interface AxionSqlParserConstants {

  int EOF = 0;
  int LINE_COMMENT = 5;
  int BLOCK_COMMENT = 6;
  int ADD = 7;
  int ACTION = 8;
  int ALL = 9;
  int ALTER = 10;
  int ALWAYS = 11;
  int AND = 12;
  int AS = 13;
  int ASC = 14;
  int BEGIN = 15;
  int BETWEEN = 16;
  int BOTH = 17;
  int BY = 18;
  int CAST = 19;
  int CASCADE = 20;
  int CASE = 21;
  int CHECK = 22;
  int CREATE = 23;
  int COLUMN = 24;
  int CONSTRAINT = 25;
  int CURRENT_TIMESTAMP = 26;
  int CURRENT_DATE = 27;
  int CURRENT_TIME = 28;
  int CYCLE = 29;
  int DATABASE = 30;
  int DATA = 31;
  int DAY = 32;
  int DEFAULT_ = 33;
  int DEFERRED = 34;
  int DEFERRABLE = 35;
  int DEFRAG = 36;
  int DELETE = 37;
  int DESC = 38;
  int DISTINCT = 39;
  int DROP = 40;
  int ELSE = 41;
  int END = 42;
  int ESCAPE = 43;
  int EXCEPTION = 44;
  int EXISTS = 45;
  int EXPLAIN = 46;
  int EXTRACT = 47;
  int EXTERNAL = 48;
  int FALSE = 49;
  int FIRST = 50;
  int FOR = 51;
  int FOREIGN = 52;
  int FROM = 53;
  int FULL = 54;
  int GENERATED = 55;
  int GROUP = 56;
  int HAVING = 57;
  int HOUR = 58;
  int IDENTITY = 59;
  int IF = 60;
  int INCREMENT = 61;
  int IMMEDIATE = 62;
  int IN = 63;
  int INITIALLY = 64;
  int INDEX = 65;
  int INNER = 66;
  int INSERT = 67;
  int INTO = 68;
  int IS = 69;
  int JOIN = 70;
  int KEY = 71;
  int LEADING = 72;
  int LEFT = 73;
  int LIKE = 74;
  int LIMIT = 75;
  int LINK = 76;
  int MAXVALUE = 77;
  int MATCHED = 78;
  int MERGE = 79;
  int MINUTE = 80;
  int MINVALUE = 81;
  int MILLISECOND = 82;
  int MONTH = 83;
  int NEXT = 84;
  int NO = 85;
  int NOT = 86;
  int NULL = 87;
  int OFFSET = 88;
  int ON = 89;
  int OR = 90;
  int ORDER = 91;
  int ORGANIZATION = 92;
  int OUTER = 93;
  int POSITION = 94;
  int PRIMARY = 95;
  int QUARTER = 96;
  int RIGHT = 97;
  int REFERENCES = 98;
  int RENAME = 99;
  int RESTART = 100;
  int RESTRICT = 101;
  int SECOND = 102;
  int SELECT = 103;
  int SEQUENCE = 104;
  int SET = 105;
  int SOUNDS = 106;
  int START = 107;
  int SUBSTRING = 108;
  int SYSDATE = 109;
  int TABLE = 110;
  int THEN = 111;
  int TO = 112;
  int TRAILING = 113;
  int TRIM = 114;
  int TRUE = 115;
  int TRUNCATE = 116;
  int UNIQUE = 117;
  int UPDATE = 118;
  int UPSERT = 119;
  int USER = 120;
  int USING = 121;
  int VALUES = 122;
  int VALUE = 123;
  int VIEW = 124;
  int WEEK = 125;
  int WHEN = 126;
  int WHERE = 127;
  int WITH = 128;
  int YEAR = 129;
  int BIT = 130;
  int BYTE = 131;
  int INT = 132;
  int REAL = 133;
  int CLOB = 134;
  int BLOB = 135;
  int CHAR = 136;
  int CHARACTER = 137;
  int DATE = 138;
  int TIME = 139;
  int FLOAT = 140;
  int BIGINT = 141;
  int LONG = 142;
  int RAW = 143;
  int STRING = 144;
  int BINARY = 145;
  int NUMERIC = 146;
  int NUMBER = 147;
  int DECIMAL = 148;
  int DEC = 149;
  int BOOLEAN = 150;
  int TINYINT = 151;
  int INTEGER = 152;
  int VARCHAR = 153;
  int VARCHAR2 = 154;
  int LONGVARCHAR = 155;
  int TEXT = 156;
  int SMALLINT = 157;
  int SHORT = 158;
  int VARBINARY = 159;
  int LONGVARBINARY = 160;
  int IMAGE = 161;
  int VARYING = 162;
  int LARGE = 163;
  int TIMESTAMP = 164;
  int OBJECT = 165;
  int JAVA_OBJECT = 166;
  int DOUBLE = 167;
  int INTEGER_LITERAL = 168;
  int FLOATING_POINT_LITERAL = 169;
  int EXPONENT = 170;
  int STRING_LITERAL = 171;
  int ID = 172;
  int LETTER = 173;
  int DIGIT = 174;
  int ASSIGN = 175;
  int COMMA = 176;
  int CONCAT = 177;
  int SEMICOLON = 178;
  int DOT = 179;
  int LESS = 180;
  int LESSEQUAL = 181;
  int GREATER = 182;
  int GREATEREQUAL = 183;
  int EQUAL = 184;
  int NOTEQUAL = 185;
  int NOTEQUAL2 = 186;
  int JOINPLUS = 187;
  int OPENPAREN = 188;
  int CLOSEPAREN = 189;
  int ASTERISK = 190;
  int SLASH = 191;
  int PLUS = 192;
  int MINUS = 193;
  int QUESTIONMARK = 194;
  int START_QUOTED_IDENTIFIER = 195;
  int QUOTED_IDENTIFIER = 196;
  int END_QUOTED_IDENTIFIER = 197;

  int DEFAULT = 0;
  int STATE_QuotedIdentStart = 1;
  int STATE_QuotedIdentEnd = 2;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<LINE_COMMENT>",
    "<BLOCK_COMMENT>",
    "\"add\"",
    "\"action\"",
    "\"all\"",
    "\"alter\"",
    "\"always\"",
    "\"and\"",
    "\"as\"",
    "\"asc\"",
    "\"begin\"",
    "\"between\"",
    "\"both\"",
    "\"by\"",
    "\"cast\"",
    "\"cascade\"",
    "\"case\"",
    "\"check\"",
    "\"create\"",
    "\"column\"",
    "\"constraint\"",
    "\"current_timestamp\"",
    "\"current_date\"",
    "\"current_time\"",
    "\"cycle\"",
    "\"database\"",
    "\"data\"",
    "\"day\"",
    "\"default\"",
    "\"deferred\"",
    "\"deferrable\"",
    "\"defrag\"",
    "\"delete\"",
    "\"desc\"",
    "\"distinct\"",
    "\"drop\"",
    "\"else\"",
    "\"end\"",
    "\"escape\"",
    "\"exception\"",
    "\"exists\"",
    "\"explain\"",
    "\"extract\"",
    "\"external\"",
    "\"false\"",
    "\"first\"",
    "\"for\"",
    "\"foreign\"",
    "\"from\"",
    "\"full\"",
    "\"generated\"",
    "\"group\"",
    "\"having\"",
    "\"hour\"",
    "\"identity\"",
    "\"if\"",
    "\"increment\"",
    "\"immediate\"",
    "\"in\"",
    "\"initially\"",
    "\"index\"",
    "\"inner\"",
    "\"insert\"",
    "\"into\"",
    "\"is\"",
    "\"join\"",
    "\"key\"",
    "\"leading\"",
    "\"left\"",
    "\"like\"",
    "\"limit\"",
    "\"link\"",
    "\"maxvalue\"",
    "\"matched\"",
    "\"merge\"",
    "\"minute\"",
    "\"minvalue\"",
    "\"millisecond\"",
    "\"month\"",
    "\"next\"",
    "\"no\"",
    "\"not\"",
    "\"null\"",
    "\"offset\"",
    "\"on\"",
    "\"or\"",
    "\"order\"",
    "\"organization\"",
    "\"outer\"",
    "\"position\"",
    "\"primary\"",
    "\"quarter\"",
    "\"right\"",
    "\"references\"",
    "\"rename\"",
    "\"restart\"",
    "\"restrict\"",
    "\"second\"",
    "\"select\"",
    "\"sequence\"",
    "\"set\"",
    "\"sounds\"",
    "\"start\"",
    "\"substring\"",
    "\"sysdate\"",
    "\"table\"",
    "\"then\"",
    "\"to\"",
    "\"trailing\"",
    "\"trim\"",
    "\"true\"",
    "\"truncate\"",
    "\"unique\"",
    "\"update\"",
    "\"upsert\"",
    "\"user\"",
    "\"using\"",
    "\"values\"",
    "\"value\"",
    "\"view\"",
    "\"week\"",
    "\"when\"",
    "\"where\"",
    "\"with\"",
    "\"year\"",
    "\"bit\"",
    "\"byte\"",
    "\"int\"",
    "\"real\"",
    "\"clob\"",
    "\"blob\"",
    "\"char\"",
    "\"character\"",
    "\"date\"",
    "\"time\"",
    "\"float\"",
    "\"bigint\"",
    "\"long\"",
    "\"raw\"",
    "\"string\"",
    "\"binary\"",
    "\"numeric\"",
    "\"number\"",
    "\"decimal\"",
    "\"dec\"",
    "\"boolean\"",
    "\"tinyint\"",
    "\"integer\"",
    "\"varchar\"",
    "\"varchar2\"",
    "\"longvarchar\"",
    "\"text\"",
    "\"smallint\"",
    "\"short\"",
    "\"varbinary\"",
    "\"longvarbinary\"",
    "\"image\"",
    "\"varying\"",
    "\"large\"",
    "\"timestamp\"",
    "\"object\"",
    "\"java_object\"",
    "\"double\"",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "\":=\"",
    "\",\"",
    "\"||\"",
    "\";\"",
    "\".\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\"!=\"",
    "\"<>\"",
    "\"(+)\"",
    "\"(\"",
    "\")\"",
    "\"*\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\"?\"",
    "\"\\\"\"",
    "<QUOTED_IDENTIFIER>",
    "\"\\\"\"",
  };

}
